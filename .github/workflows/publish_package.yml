name: Publish package to Github Packages registry

on:
  push:
    #Triggered when new tags pushed upstream (tags must have semver format)
    tags:
      #  - 'v*.*.*'
      - '*@*'

jobs:
  build-unity-core:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        projectPath:
          - CoreBuild
        targetPlatform:
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-buildAndTest-${{ matrix.projectPath }}-buildAndTest-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-buildAndTest-
            Library-${{ matrix.projectPath }}-
      #      - uses: game-ci/unity-test-runner@v2
      #        id: testRunner
      #        with:
      #          projectPath: ${{ matrix.projectPath }}
      #      - uses: actions/upload-artifact@v2
      #        with:
      #          name: Test results (all modes)
      #          path: ${{ steps.testRunner.outputs.artifactsPath }}
      - uses: game-ci/unity-builder@v2
        with:
          projectPath: ${{ matrix.projectPath }}
          targetPlatform: ${{ matrix.targetPlatform }}
          customParameters: "-myParameter myValue -myBoolean -ThirdParameter andItsValue"
  #      - uses: actions/upload-artifact@v2
  #        with:
  #          name: Build (${{ matrix.targetPlatform }})
  #          path: build/${{ matrix.targetPlatform }}
  publish-single-core-module:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com/
          scope: '@frg-ivan'
      - run: echo "MODULE_TO_PUBLISH_PATH=$(git tag --points-at HEAD | cut -d@ -f1-1)" >> $GITHUB_ENV
      - run: echo ${{env.MODULE_TO_PUBLISH_PATH}}
      - run: npm install
        working-directory: CoreBuild/Assets/CorePackages/${{env.MODULE_TO_PUBLISH_PATH}}
      - run: npm publish
        working-directory: CoreBuild/Assets/CorePackages/${{env.MODULE_TO_PUBLISH_PATH}}
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

